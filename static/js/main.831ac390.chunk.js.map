{"version":3,"sources":["components/payroll-provider.js","components/nav-links.js","components/routes.js","utilities/format-data-for-table.js","components/today-i-learned.js","components/fun-fact.js","App.js","reportWebVitals.js","index.js"],"names":["PayrollContext","createContext","PayrollProvider","children","useState","counter","setCounter","value","companyName","ein","handleIncreaseCountClick","useCallback","handleDecreaseCountClick","count","Provider","NavLinks","useContext","to","Routes","path","TodayILearned","FunFact","formatDataForTable","posts","map","post","data","author","id","key","numOfComments","num_comments","score","title","upVotes","ups","tableData","setTableData","showModal","setShowModal","useEffect","axios","get","then","response","openModal","closeModal","columns","useMemo","dataIndex","length","onClick","type","dataSource","visible","onOk","onCancel","size","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.831ac390.chunk.js","sourcesContent":["import {\n\tuseState,\n\tuseCallback,\n\tcreateContext,\n} from 'react';\n\nexport const PayrollContext = createContext({});\n\nexport function PayrollProvider({ children }) {\n\tconst [counter, setCounter] = useState(0);\n\n\tconst increaseCount = useCallback(() => {\n\t\tsetCounter(counter + 1);\n\t}, [counter]);\n\n\tconst decreaseCount = useCallback(() => {\n\t\tsetCounter(counter - 1);\n\t})\n\n\tconst value = {\n\t\tcompanyName: `Jake's Company, LLC`,\n\t\tein: '55-677940',\n\t\thandleIncreaseCountClick: increaseCount,\n\t\thandleDecreaseCountClick: decreaseCount,\n\t\tcount: counter,\n\t};\n\n\treturn (\n\t\t<PayrollContext.Provider value={value}>\n\t\t\t{ children }\n\t\t</PayrollContext.Provider>\n\t)\n}\n","import {\n\tuseContext,\n} from 'react';\nimport {\n\tLink,\n} from 'react-router-dom';\n\nimport {\n\tPayrollContext,\n} from \"../components\";\n\nexport function NavLinks() {\n\tconst {\n\t\tein,\n\t\tcompanyName,\n\t\tcount,\n\t} = useContext(PayrollContext);\n\treturn (\n\t\t<nav>\n\t\t\t<h1>Company Name: { companyName } | EIN: { ein } | Number of Clicks: { count }</h1>\n\t\t\t<ul>\n\t\t\t\t<li>\n\t\t\t\t\t<Link to=\"/spa-prototype\">Home</Link>\n\t\t\t\t</li>\n\n\t\t\t\t<li>\n\t\t\t\t\t<Link to=\"/spa-prototype/today-i-learned\">Today I Learned</Link>\n\t\t\t\t</li>\n\n\t\t\t\t<li>\n\t\t\t\t\t<Link to=\"/spa-prototype/fun-fact\">Fun Fact</Link>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t</nav>\n\t)\n}\n","import {\n\tSwitch,\n\tRoute,\n} from 'react-router-dom';\n\nimport {\n\tTodayILearned,\n\tFunFact,\n} from \"../components\";\n\nexport function Routes() {\n\treturn (\n\t\t<Switch>\n\t\t\t<Route path=\"/spa-prototype/today-i-learned\">\n\t\t\t\t<TodayILearned />\n\t\t\t</Route>\n\n\t\t\t<Route path=\"/spa-prototype/fun-fact\">\n\t\t\t\t<FunFact />\n\t\t\t</Route>\n\n\t\t\t<Route path=\"/spa-prototype\">\n\t\t\t\t<h1>This is the home screen</h1>\n\t\t\t</Route>\n\t\t</Switch>\n\t)\n}\n","export function formatDataForTable(posts) {\n\treturn posts.map((post) => {\n\t\tconst {\n\t\t\tdata: {\n\t\t\t\tauthor,\n\t\t\t\tid,\n\t\t\t\tnum_comments,\n\t\t\t\tscore,\n\t\t\t\ttitle,\n\t\t\t\tups,\n\t\t\t},\n\t\t} = post;\n\n\t\treturn {\n\t\t\tkey: id,\n\t\t\tid,\n\t\t\tauthor,\n\t\t\tnumOfComments: num_comments,\n\t\t\tscore,\n\t\t\ttitle,\n\t\t\tupVotes: ups,\n\t\t};\n\t})\n}\n","import {\n\tuseMemo,\n\tuseState,\n\tuseEffect,\n\tuseContext,\n\tuseCallback,\n} from 'react';\nimport axios from \"axios\";\nimport {\n\tButton,\n\tTable,\n\tSpin,\n\tModal,\n} from 'antd';\n\nimport {\n\tPayrollContext,\n} from \"../components\";\nimport {\n\tformatDataForTable,\n} from \"../utilities\";\n\nexport function TodayILearned() {\n\tconst [tableData, setTableData] = useState([]);\n\tconst [showModal, setShowModal] = useState(false);\n\tconst {\n\t\tcount,\n\t\thandleIncreaseCountClick,\n\t} = useContext(PayrollContext);\n\n\tuseEffect(() => {\n\t\taxios.get('https://www.reddit.com/r/todayilearned.json?limit=10')\n\t\t\t.then(response => setTableData(formatDataForTable(response.data.data.children)));\n\t}, []);\n\n\tconst openModal = useCallback(() => setShowModal(true), []);\n\tconst closeModal = useCallback(() => setShowModal(false), []);\n\n\tconst columns = useMemo(() => {\n\t\treturn [\n\t\t\t{\n\t\t\t\ttitle: 'Author',\n\t\t\t\tdataIndex: 'author',\n\t\t\t\tkey: 'author',\n\t\t\t},\n\t\t\t{\n\t\t\t\ttitle: 'Title',\n\t\t\t\tdataIndex: 'title',\n\t\t\t\tkey: 'title',\n\t\t\t},\n\t\t\t{\n\t\t\t\ttitle: 'Number of Comments',\n\t\t\t\tdataIndex: 'numOfComments',\n\t\t\t\tkey: 'numOfComments',\n\t\t\t},\n\t\t\t{\n\t\t\t\ttitle: 'Number of Upvotes',\n\t\t\t\tdataIndex: 'upvotes',\n\t\t\t\tkey: 'upvotes',\n\t\t\t},\n\t\t\t{\n\t\t\t\ttitle: 'Score',\n\t\t\t\tdataIndex: 'score',\n\t\t\t\tkey: 'score',\n\t\t\t},\n\t\t]\n\t}, []);\n\n\tif (!tableData.length) {\n\t\treturn (\n\t\t\t<Spin size=\"large\" />\n\t\t);\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<Button onClick={ handleIncreaseCountClick } type=\"primary\">Increase Number of Clicks</Button>\n\t\t\t<Button onClick={ openModal }>Wanna see the count?</Button>\n\t\t\t<Table columns={ columns } dataSource={ tableData } />\n\t\t\t<Modal title=\"The count is...\" visible={ showModal } onOk={ closeModal } onCancel={ closeModal }>\n\t\t\t\t<h3>Wow! The count is { count }!</h3>\n\t\t\t</Modal>\n\t\t</>\n\t)\n}\n","import {\n\tuseMemo,\n\tuseState,\n\tuseCallback,\n\tuseEffect,\n\tuseContext,\n} from 'react';\nimport axios from \"axios\";\nimport {\n\tModal,\n\tButton,\n\tTable,\n\tSpin,\n} from 'antd';\n\nimport {\n\tPayrollContext,\n} from \"../components\";\nimport {\n\tformatDataForTable,\n} from \"../utilities\";\n\nexport function FunFact() {\n\tconst [tableData, setTableData] = useState([]);\n\tconst [showModal, setShowModal] = useState(false);\n\tconst {\n\t\tcount,\n\t\thandleDecreaseCountClick,\n\t} = useContext(PayrollContext);\n\n\tuseEffect(() => {\n\t\taxios.get('https://www.reddit.com/r/funfact.json?limit=10')\n\t\t\t.then(response => setTableData(formatDataForTable(response.data.data.children)));\n\t}, []);\n\n\tconst openModal = useCallback(() => setShowModal(true), []);\n\tconst closeModal = useCallback(() => setShowModal(false), []);\n\n\tconst columns = useMemo(() => {\n\t\treturn [\n\t\t\t{\n\t\t\t\ttitle: 'Author',\n\t\t\t\tdataIndex: 'author',\n\t\t\t\tkey: 'author',\n\t\t\t},\n\t\t\t{\n\t\t\t\ttitle: 'Title',\n\t\t\t\tdataIndex: 'title',\n\t\t\t\tkey: 'title',\n\t\t\t},\n\t\t\t{\n\t\t\t\ttitle: 'Number of Comments',\n\t\t\t\tdataIndex: 'numOfComments',\n\t\t\t\tkey: 'numOfComments',\n\t\t\t},\n\t\t\t{\n\t\t\t\ttitle: 'Number of Upvotes',\n\t\t\t\tdataIndex: 'upvotes',\n\t\t\t\tkey: 'upvotes',\n\t\t\t},\n\t\t\t{\n\t\t\t\ttitle: 'Score',\n\t\t\t\tdataIndex: 'score',\n\t\t\t\tkey: 'score',\n\t\t\t},\n\t\t]\n\t}, []);\n\n\tif (!tableData.length) {\n\t\treturn (\n\t\t\t<Spin size=\"large\" />\n\t\t);\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<Button onClick={ handleDecreaseCountClick } type=\"primary\">Decrease Number of Clicks</Button>\n\t\t\t<Button onClick={ openModal }>Wanna see the count?</Button>\n\t\t\t<Table columns={ columns } dataSource={ tableData } />\n\t\t\t<Modal title=\"The count is...\" visible={ showModal } onOk={ closeModal } onCancel={ closeModal }>\n\t\t\t\t<h3>Wow! The count is { count }!</h3>\n\t\t\t</Modal>\n\t\t</>\n\t)\n}\n","import {\n    BrowserRouter as Router\n} from \"react-router-dom\";\nimport {\n    PayrollProvider,\n    Routes,\n    NavLinks,\n} from \"./components\";\nimport 'antd/dist/antd.css';\nimport './App.css';\n\nfunction App() {\n  return (\n    <PayrollProvider>\n        <Router>\n            <NavLinks />\n            <hr />\n            <Routes />\n        </Router>\n    </PayrollProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}